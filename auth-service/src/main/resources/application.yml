server:
  port: ${SERVER_PORT:8081}

# Google OAuth Configuration
google:
  oauth:
    enabled: ${GOOGLE_OAUTH_ENABLED:true}
    client-id: ${GOOGLE_CLIENT_ID}
    client-secret: ${GOOGLE_CLIENT_SECRET}
    project-id: ${GOOGLE_PROJECT_ID}
    redirect-uri: ${GOOGLE_REDIRECT_URI:http://localhost:8081/auth/v1/google/callback}

spring:
  application:
    name: auth-service

  # Disable OAuth2 client autoconfig to prevent startup issues
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration

  # Security Configuration - OAuth2 resource server with custom bearer token resolver
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI:http://localhost:8080/realms/treasure-hunt}
          jwk-set-uri: ${SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI:http://localhost:8080/realms/treasure-hunt/protocol/openid-connect/certs}

  # Redis Configuration for Caching
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: 1
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

  # Cache Configuration
  cache:
    type: redis
    redis:
      time-to-live: 300s
      cache-null-values: false

# Keycloak Configuration
keycloak:
  realm: ${KEYCLOAK_REALM:treasure-hunt}
  auth-server-url: ${KEYCLOAK_AUTH_SERVER_URL:http://localhost:8080}
  server-url: ${KEYCLOAK_SERVER_URL:http://localhost:8080}
  client-id: ${KEYCLOAK_CLIENT_ID:auth-service}
  resource: ${KEYCLOAK_CLIENT_ID:auth-service}
  credentials:
    secret: ${KEYCLOAK_CLIENT_SECRET:fallback-secret}
  use-resource-role-mappings: true
  bearer-only: true

  # Client secret management
  client-secret:
    refresh-interval-minutes: ${KEYCLOAK_CLIENT_SECRET_REFRESH_INTERVAL:30}

  # Admin client configuration for user management
  admin:
    username: ${KEYCLOAK_ADMIN_USERNAME:admin}
    password: ${KEYCLOAK_ADMIN_PASSWORD:admin}
    client-id: ${KEYCLOAK_ADMIN_CLIENT_ID:admin-cli}

  # Frontend client configuration
  frontend:
    client-id: ${KEYCLOAK_FRONTEND_CLIENT_ID:frontend-client}
    redirect-uris:
      - ${FRONTEND_REDIRECT_URI_1:http://localhost:3000/auth/callback}
      - ${FRONTEND_REDIRECT_URI_2:https://app.mysillydreams.com/auth/callback}
    web-origins:
      - ${FRONTEND_WEB_ORIGIN_1:http://localhost:3000}
      - ${FRONTEND_WEB_ORIGIN_2:https://app.mysillydreams.com}
    default-redirect-uri: ${FRONTEND_DEFAULT_REDIRECT_URI:http://localhost:3000/auth/callback}

  # Timeout configuration
  timeouts:
    connection-timeout: ${KEYCLOAK_CONNECTION_TIMEOUT:10s}
    request-timeout: ${KEYCLOAK_REQUEST_TIMEOUT:30s}
    token-validation-timeout: ${KEYCLOAK_TOKEN_VALIDATION_TIMEOUT:5s}

# Auth Service Configuration
auth:
  # User Service Integration Configuration
  user-service:
    base-url: ${USER_SERVICE_URL:http://localhost:8083}
    create-profile-endpoint: /api/v1/users
    timeout: 10s
    internal-api-key: ${USER_SERVICE_INTERNAL_API_KEY:auth-service-internal-key-12345}
    max-retries: 3
    retry-delay: 1s

# Application Configuration
app:
  # WebClient Configuration
  webclient:
    connection-timeout: ${WEBCLIENT_CONNECTION_TIMEOUT:5000}
    read-timeout: ${WEBCLIENT_READ_TIMEOUT:10000}
    write-timeout: ${WEBCLIENT_WRITE_TIMEOUT:10000}
    max-memory-size: ${WEBCLIENT_MAX_MEMORY_SIZE:1048576} # 1MB

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# Logging Configuration for debugging
logging:
  level:
    com.mysillydreams: DEBUG
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.springframework.security.web: DEBUG
    org.springframework.security.oauth2: DEBUG
    org.springframework.security.oauth2.server.resource: DEBUG
    org.hibernate.SQL: INFO
  pattern:
    console: '%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n'

# OpenAPI Documentation
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method



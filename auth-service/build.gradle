plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.mysillydreams'
version = '1.0.0'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.0"
    }
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Spring Cloud OpenFeign for service-to-service communication
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    // Keycloak Integration
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.keycloak:keycloak-admin-client:23.0.1'
    // implementation 'org.keycloak:keycloak-spring-boot-starter:23.0.1'

    // Security & JWT - temporarily disabled for testing
    // implementation 'org.springframework.security:spring-security-oauth2-jose'
    // implementation 'org.springframework.security:spring-security-oauth2-client'
    
    // Utilities
    implementation 'org.apache.commons:commons-lang3'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    // Documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    
    // Monitoring
    implementation 'io.micrometer:micrometer-registry-prometheus'
    
    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.testcontainers:testcontainers'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Docker build configuration
jar {
    enabled = false
}

bootJar {
    archiveFileName = "${project.name}.jar"
}

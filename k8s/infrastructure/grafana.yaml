---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: msd-infrastructure
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus.msd-infrastructure.svc.cluster.local:9090
        isDefault: true
        editable: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards-config
  namespace: msd-infrastructure
data:
  dashboards.yaml: |
    apiVersion: 1
    providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10
        allowUiUpdates: true
        options:
          path: /var/lib/grafana/dashboards
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-spring-boot
  namespace: msd-infrastructure
data:
  spring-boot-dashboard.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Spring Boot Application Metrics",
        "tags": ["spring-boot", "micrometer"],
        "style": "dark",
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "JVM Memory Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "jvm_memory_used_bytes{application=\"$application\"}",
                "legendFormat": "{{area}} - {{id}}"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "HTTP Request Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(http_server_requests_seconds_count{application=\"$application\"}[5m])",
                "legendFormat": "{{method}} {{uri}}"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0}
          }
        ],
        "templating": {
          "list": [
            {
              "name": "application",
              "type": "query",
              "query": "label_values(application)",
              "current": {"value": "All", "text": "All"},
              "includeAll": true
            }
          ]
        },
        "time": {"from": "now-1h", "to": "now"},
        "refresh": "5s"
      }
    }
---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-secret
  namespace: msd-infrastructure
type: Opaque
data:
  admin-password: YWRtaW4xMjM= # admin123
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: msd-infrastructure
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana-secret
              key: admin-password
        - name: GF_INSTALL_PLUGINS
          value: "grafana-piechart-panel"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "300m"
        volumeMounts:
        - name: grafana-data
          mountPath: /var/lib/grafana
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
        - name: grafana-dashboards-config
          mountPath: /etc/grafana/provisioning/dashboards
        - name: grafana-dashboard-spring-boot
          mountPath: /var/lib/grafana/dashboards
      volumes:
      - name: grafana-data
        emptyDir: {}
      - name: grafana-datasources
        configMap:
          name: grafana-datasources
      - name: grafana-dashboards-config
        configMap:
          name: grafana-dashboards-config
      - name: grafana-dashboard-spring-boot
        configMap:
          name: grafana-dashboard-spring-boot
      initContainers:
      - name: wait-for-prometheus
        image: busybox:1.35
        command:
        - sh
        - -c
        - |
          until nc -z prometheus.msd-infrastructure.svc.cluster.local 9090; do
            echo "Waiting for Prometheus..."
            sleep 5
          done
          echo "Prometheus is ready!"
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: msd-infrastructure
spec:
  selector:
    app: grafana
  ports:
  - port: 3000
    targetPort: 3000
  type: ClusterIP

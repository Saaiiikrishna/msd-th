---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: msd-infrastructure
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    rule_files:
      # - "first_rules.yml"
      # - "second_rules.yml"

    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      - job_name: 'auth-service'
        static_configs:
          - targets: ['auth-service.msd-treasure-hunt.svc.cluster.local:8081']
        metrics_path: '/actuator/prometheus'

      - job_name: 'user-service'
        static_configs:
          - targets: ['user-service.msd-treasure-hunt.svc.cluster.local:8082']
        metrics_path: '/actuator/prometheus'

      - job_name: 'payment-service'
        static_configs:
          - targets: ['payment-service.msd-treasure-hunt.svc.cluster.local:8083']
        metrics_path: '/actuator/prometheus'

      - job_name: 'treasure-service'
        static_configs:
          - targets: ['treasure-service.msd-treasure-hunt.svc.cluster.local:8084']
        metrics_path: '/actuator/prometheus'

      - job_name: 'api-gateway'
        static_configs:
          - targets: ['api-gateway.msd-treasure-hunt.svc.cluster.local:8080']
        metrics_path: '/actuator/prometheus'

      - job_name: 'redis'
        static_configs:
          - targets: ['redis.msd-infrastructure.svc.cluster.local:6379']

      - job_name: 'postgres-user'
        static_configs:
          - targets: ['postgres-user.msd-infrastructure.svc.cluster.local:5432']

      - job_name: 'postgres-payment'
        static_configs:
          - targets: ['postgres-payment.msd-infrastructure.svc.cluster.local:5432']

      - job_name: 'postgres-treasure'
        static_configs:
          - targets: ['postgres-treasure.msd-infrastructure.svc.cluster.local:5432']

      - job_name: 'kafka'
        static_configs:
          - targets: ['kafka.msd-infrastructure.svc.cluster.local:9092']
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: msd-infrastructure
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        ports:
        - containerPort: 9090
        args:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus/'
        - '--web.console.libraries=/etc/prometheus/console_libraries'
        - '--web.console.templates=/etc/prometheus/consoles'
        - '--storage.tsdb.retention.time=200h'
        - '--web.enable-lifecycle'
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus/
        - name: prometheus-data
          mountPath: /prometheus/
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
      - name: prometheus-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: msd-infrastructure
spec:
  selector:
    app: prometheus
  ports:
  - port: 9090
    targetPort: 9090
  type: ClusterIP

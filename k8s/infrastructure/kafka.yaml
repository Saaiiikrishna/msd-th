---
apiVersion: v1
kind: ConfigMap
metadata:
  name: zookeeper-config
  namespace: msd-infrastructure
data:
  ZOOKEEPER_CLIENT_PORT: "2181"
  ZOOKEEPER_TICK_TIME: "2000"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
  namespace: msd-infrastructure
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
      - name: zookeeper
        image: confluentinc/cp-zookeeper:7.4.0
        ports:
        - containerPort: 2181
        envFrom:
        - configMapRef:
            name: zookeeper-config
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "echo ruok | nc localhost 2181"
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "echo ruok | nc localhost 2181"
          initialDelaySeconds: 10
          periodSeconds: 5
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "300m"
        volumeMounts:
        - name: zookeeper-data
          mountPath: /var/lib/zookeeper/data
      volumes:
      - name: zookeeper-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  namespace: msd-infrastructure
spec:
  selector:
    app: zookeeper
  ports:
  - port: 2181
    targetPort: 2181
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-config
  namespace: msd-infrastructure
data:
  KAFKA_BROKER_ID: "1"
  KAFKA_ZOOKEEPER_CONNECT: "zookeeper.msd-infrastructure.svc.cluster.local:2181"
  KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka.msd-infrastructure.svc.cluster.local:9092,PLAINTEXT_HOST://kafka.msd-infrastructure.svc.cluster.local:29092"
  KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
  KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
  KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
  KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  namespace: msd-infrastructure
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: confluentinc/cp-kafka:7.4.0
        ports:
        - containerPort: 9092
        - containerPort: 29092
        envFrom:
        - configMapRef:
            name: kafka-config
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "kafka-broker-api-versions --bootstrap-server localhost:9092"
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "kafka-broker-api-versions --bootstrap-server localhost:9092"
          initialDelaySeconds: 30
          periodSeconds: 10
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: kafka-data
          mountPath: /var/lib/kafka/data
      volumes:
      - name: kafka-data
        emptyDir: {}
      initContainers:
      - name: wait-for-zookeeper
        image: busybox:1.35
        command:
        - sh
        - -c
        - |
          until nc -z zookeeper.msd-infrastructure.svc.cluster.local 2181; do
            echo "Waiting for Zookeeper..."
            sleep 5
          done
          echo "Zookeeper is ready!"
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: msd-infrastructure
spec:
  selector:
    app: kafka
  ports:
  - name: kafka
    port: 9092
    targetPort: 9092
  - name: kafka-external
    port: 29092
    targetPort: 29092
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafdrop
  namespace: msd-infrastructure
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafdrop
  template:
    metadata:
      labels:
        app: kafdrop
    spec:
      containers:
      - name: kafdrop
        image: obsidiandynamics/kafdrop:latest
        ports:
        - containerPort: 9000
        env:
        - name: KAFKA_BROKERCONNECT
          value: "kafka.msd-infrastructure.svc.cluster.local:9092"
        - name: JVM_OPTS
          value: "-Xms32M -Xmx64M"
        - name: SERVER_SERVLET_CONTEXTPATH
          value: "/"
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
      initContainers:
      - name: wait-for-kafka
        image: busybox:1.35
        command:
        - sh
        - -c
        - |
          until nc -z kafka.msd-infrastructure.svc.cluster.local 9092; do
            echo "Waiting for Kafka..."
            sleep 5
          done
          echo "Kafka is ready!"
---
apiVersion: v1
kind: Service
metadata:
  name: kafdrop
  namespace: msd-infrastructure
spec:
  selector:
    app: kafdrop
  ports:
  - port: 9000
    targetPort: 9000
  type: ClusterIP

server:
  port: 8080

spring:
  application:
    name: api-gateway

  # Redis Configuration for Rate Limiting and Caching
  data:
    redis:
      host: redis
      port: 6379
      password:
      database: 0
      timeout: 2000ms

  # Cache Configuration
  cache:
    type: redis
    redis:
      time-to-live: 300000  # 5 minutes for session introspection

  # Security Configuration for local development
  # Using session-based authentication via AuthenticationFilter

# Gateway Configuration will be defined later in the file
  #     lettuce:
  #       pool:
  #         max-active: 8
  #         max-idle: 8
  #         min-idle: 0

  # Cloud Gateway Configuration
  cloud:
    # Disable Spring Cloud compatibility check for Spring Boot 3.5.4
    compatibility-verifier:
      enabled: false
    gateway:
      # Global CORS Configuration
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOriginPatterns: 
              - "http://localhost:3000"
              - "https://*.mysillydreams.com"
              - "https://*.vercel.app"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
              - PATCH
            allowedHeaders:
              - "*"
            allowCredentials: true
            maxAge: 3600

      # Default Filters
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
        - AddResponseHeader=X-Response-Default-Foo, Default-Bar

      # Discovery Configuration
      discovery:
        locator:
          enabled: false
          lower-case-service-id: true

      # Route Configuration for local development
      routes:
        # ---------- Auth Service ----------
        - id: auth-service
          uri: ${services.auth-service.url}
          predicates:
            - Path=/api/auth/**

        # ---------- User Service ----------
        - id: user-service
          uri: ${services.user-service.url}
          predicates:
            - Path=/api/user-service/**

        # ---------- Treasure Service ----------
        - id: treasure-service
          uri: ${services.treasure-service.url}
          predicates:
            - Path=/api/treasure/**

        # ---------- Payment Service ----------
        - id: payment-service
          uri: ${services.payment-service.url}
          predicates:
            - Path=/api/payments/**

        # ---------- Keycloak OIDC ----------
        - id: keycloak
          uri: ${services.keycloak.url}
          predicates:
            - Path=/realms/**, /resources/**

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,gateway
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

# Logging Configuration
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.cloud.gateway.route.RouteDefinitionLocator: INFO
    reactor.netty: INFO
    com.mysillydreams.gateway: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Service Discovery (disabled for now)
eureka:
  client:
    enabled: false

# Custom Gateway Configuration
gateway:

  rate-limiting:
    enabled: true
    public-catalog-rps: 200    # High rate limit for public catalog browsing
    enrollment-rps: 20         # Lower rate limit for enrollment operations
    default-rps: 100           # Standard rate limit for general operations
    burst-multiplier: 2        # Allow 2x burst capacity
    
  circuit-breaker:
    enabled: true
    failure-threshold: 5
    timeout: 5000ms
    
  retry:
    enabled: true
    max-attempts: 3
    backoff-delay: 1000ms

# Service URLs for local development
services:
  auth-service:
    url: http://auth-service:8082
  user-service:
    url: http://user-service:8083
  treasure-service:
    url: http://treasure-service:8082
  payment-service:
    url: http://payment-service:8081
  keycloak:
    url: http://keycloak:8080
  frontend:
    url: http://localhost:3000

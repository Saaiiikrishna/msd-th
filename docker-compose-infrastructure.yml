version: "3.9"
services:
  # Shared Infrastructure Services
  
  # Treasure Service Database
  treasure-postgres:
    image: postgis/postgis:15-3.4
    environment:
      POSTGRES_DB: treasure
      POSTGRES_USER: treasure
      POSTGRES_PASSWORD: treasure
    ports: ["5432:5432"]
    volumes: 
      - treasure_pgdata:/var/lib/postgresql/data
      - ./Treasure/test-data.sql:/docker-entrypoint-initdb.d/test-data.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U treasure -d treasure"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - treasure-network

  # Payment Service Database
  payment-postgres:
    image: postgis/postgis:15-3.4
    environment:
      POSTGRES_DB: payment_service
      POSTGRES_USER: payment_user
      POSTGRES_PASSWORD: payment_pass
    ports: ["5433:5432"]
    volumes:
      - payment_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U payment_user -d payment_service"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - treasure-network

  # Shared Redis
  redis:
    image: redis:7.2-alpine
    ports: ["6379:6379"]
    command: ["redis-server","--save","","--appendonly","no"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - treasure-network

  # Shared Kafka
  kafka:
    image: bitnami/kafka:3.7
    ports: ["9092:9092"]
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_NODE_ID: "1"
      KAFKA_CFG_PROCESS_ROLES: "controller,broker"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:29093"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:29093"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:9092"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      ALLOW_PLAINTEXT_LISTENER: "yes"
    volumes: [ "kafkadata:/bitnami/kafka" ]
    healthcheck:
      test: ["CMD-SHELL","kafka-topics.sh --bootstrap-server localhost:9092 --list > /dev/null 2>&1"]
      interval: 10s
      timeout: 5s
      retries: 10
    depends_on: [ zipkin ]
    networks:
      - treasure-network

  # Kafka UI
  kafdrop:
    image: obsidiandynamics/kafdrop:4.0.1
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
    ports: ["9000:9000"]
    depends_on: [ kafka ]
    networks:
      - treasure-network

  # Distributed Tracing
  zipkin:
    image: openzipkin/zipkin:2.24
    ports: ["9411:9411"]
    networks:
      - treasure-network

volumes:
  treasure_pgdata:
  payment_pgdata:
  kafkadata:

networks:
  treasure-network:
    driver: bridge

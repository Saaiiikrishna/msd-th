apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "payment-service.fullname" . }}-config
  labels:
    {{- include "payment-service.labels" . | nindent 4 }}
data:
  application.yml: |
    spring:
      application:
        name: {{ .Values.app.name }}
      datasource:
        url: jdbc:postgresql://{{ .Values.database.host }}:{{ .Values.database.port }}/{{ .Values.database.name }}
        driver-class-name: org.postgresql.Driver
      jpa:
        hibernate:
          ddl-auto: update
        show-sql: false
        properties:
          hibernate:
            dialect: org.hibernate.dialect.PostgreSQLDialect
            format_sql: true
      kafka:
        bootstrap-servers: {{ .Values.kafka.bootstrapServers }}
        producer:
          key-serializer: org.apache.kafka.common.serialization.StringSerializer
          value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
        consumer:
          group-id: {{ .Values.kafka.groupId }}
          key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
          value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      data:
        redis:
          host: {{ .Values.redis.host }}
          port: {{ .Values.redis.port }}
      zipkin:
        base-url: {{ .Values.zipkin.baseUrl }}

    server:
      port: {{ .Values.service.targetPort }}

    # Commission configuration
    app:
      commission:
        percent: {{ .Values.commission.percent }}

    # Outbox polling configuration
    payment:
      outbox:
        poll:
          delay: 5000
          initialDelay: 10000

    # Kafka Topics
    kafka:
      topics:
        paymentRequested: payment.requested
        paymentSucceeded: payment.succeeded
        paymentFailed: payment.failed
        vendorPayoutInitiated: vendor.payout.initiated
        vendorPayoutSucceeded: vendor.payout.succeeded
        vendorPayoutFailed: vendor.payout.failed

    # Actuator endpoints for health checks
    management:
      endpoints:
        web:
          exposure:
            include: health,info,metrics,prometheus
      endpoint:
        health:
          show-details: always

    # Swagger UI configuration
    springdoc:
      api-docs:
        path: /api-docs
      swagger-ui:
        path: /swagger-ui.html
        enabled: true

    logging:
      level:
        root: INFO
        com.mysillydreams.payment: DEBUG
        org.springframework.web: INFO
        org.springframework.kafka: INFO
